---
name: pravega-segmentstore

packages:
- pravega
- jdk8

templates:
  ctl.erb: bin/ctl
  pre-start.erb: bin/pre-start
  config.properties.erb: config/config.properties
  logback.xml: config/logback.xml

consumes:
- name: zookeepers
  type: zookeeper_peers
- name: namenodes
  type: namenodes
- name: controllers
  type: pravega-controller

properties:
  cluster_name:
    default: pravega-cluster
    description: Name of the cluster to which this instance of the SegmentStore belongs.
  container_count:
    description: Number of containers
  bk_ledger_path:
    description: Location of ledger metadata within zookeeper key space
  listening_port:
    description: TCP port where the SegmentStore will be listening for incoming requests.
    default: 12345
  enable_statistics:
    description: Whether to enable Metrics Reporting from this Pravega SegmentStore.
    default: false
  thread_pool_size:
    description: Number of threadpools for pravega service
  zk_retry_sleep_ms:
    description: Number of milliseconds to wait between ZooKeeper retries.
  zk_retry_count:
    description: Number of times to retry a failed attempt to contact ZooKeeper.
  controller_uri:
    description: URI for the Pravega Controller
  request_stream:
    description: Stream name for internal purposes. Not externally visible.
    default: _requeststream
  cooldown_in_seconds:
    description: Autoscale cool down period in seconds
  mute_in_seconds:
    description: Autoscale mute in seconds
  cache_clean_up_in_seconds:
    description: Autoscale cache cleanup in seconds
  cache_expiry_in_seconds:
    description: Autoscale cache expiry in seconds
  dynamic_cache_size:
    description: Number of dynamic metrics statistic objects to keep in memory at once.
  dynamic_ttl_seconds:
    description: Number of seconds to keep dynamic metric statistic objects in memory.
  stats_output_frequency_seconds:
    description: Number of seconds between statistics reports.
  metrics_prefix:
    description: Prefix to add to all Metrics counters.
  enable_csv_reporter:
    description: Whether to enable CSV reporting.
  csv_endpoint:
    description: CSV reporter target.
  enable_statsd_reporter:
    description: Whether to enable StatsD reporting.
  statsd_port:
    description: StatsD endpoint host name.
  statsd_host:
    description: StatsD endpoint port.
  enable_graphite_reporter:
    description: Whether to enable Graphite reporting.
  graphite_host:
    description: Graphite endpoint host name.
  graphite_port:
    description: Graphite endpoint port.
  enable_jmx_reporter:
    description: Whether to enable JMX reporting.
  jmx_domain:
    description: JMX domain.
  enable_ganglia_reporter:
    description: Whether to enable Ganglia reporting.
  ganglia_host:
    description: Ganglia endpoint host name.
  ganglia_port:
    description: Graphite endpoint port.
  enable_console_reporter:
    description: Whether to enable Console reporting.
  zk_session_timeout_millis:
    description: ZooKeeper session timeout (millis) for BookKeeper.
  zk_connection_timeout_millis:
    description: ZooKeeper connection timeout (millis) for BookKeeper.
  zk_hierarchy_depth:
    description: Hierarchy depth used for storing BookKeeper log metadata in ZooKeeper.
  bk_ensemble_size:
    description: Bookkeeper ensemble size for BookKeeper ledgers.
  bk_ack_quorum_size:
    description: Bookkeeper write Ack Quorum size for BookKeeper ledgers.
  bk_write_quorum_size:
    description: Bookkeeper write Quorum size for BookKeeper ledgers.
  bk_ledger_max_size:
    description: Bookkeeper maximum Ledger size (bytes) in BookKeeper. Once a Ledger reaches this size, it will be closed and another one open.
  zk_metadata_path:
    description: Bookkeeper ZooKeeper sub-namespace where to store SegmentContainer Log Metadata
  hdfs_root:
    description: Root path in HDFS where all Pravega-related data for this cluster is located at.
  replication:
    description: HDFS replication factor for all the data stored in HDFS. This can be used to control the availability of HDFS data.
  block_size:
    description: HDFS default block size, in bytes, that will be used to exchange data with HDFS.
  db_dir:
    description: RockDB path to the working directory where RocksDB can store its databases.
  checkpoint_min_commit_count:
    description: Durable log minimum number of commits that must be to be accumulated in order to trigger a Metadata Checkpoint.
  checkpoint_commit_count_threshold:
    description: Durable log number of commits that would trigger a Checkpoint.
  checkpoint_total_commit_length_threshold:
    description: Durable log number of bytes written that would trigger a Checkpoint.
  storage_read_alignment:
    description: Read index value with which to align all Tier2 Storage Reads.
  memory_read_min_length:
    description: Read index minimum number of bytes to return from reads if all these bytes are readily available in memory.
  cache_max_size:
    description: Read index maximum size (in bytes) for the Read Index cache (shared by all Segment Containers on this Segment Store instance).
  cache_max_time_millis:
    description: Read index maximum amount of time (in milliseconds) to keep a block of data in the Cache.
  cache_generation_time_millis:
    description: Read index length of a Cache Generation, in milliseconds.
  flush_threshold_bytes:
    description: Writer minimum number of bytes to wait for before flushing aggregated data for a Segment to Tier2 Storage.
  flush_threshold_millis:
    description: Writer minimum amount of time (in milliseconds) to wait for before flushing aggregated data for a Segment to Tier2 Storage.
  max_flush_size_bytes:
    description: Writer maximum number of bytes that can be flushed with a single write operation.
  max_items_to_read_at_once:
    description: Writer maximum number of items to read every time a read is issued to the DurableLog.
  min_read_timeout_millis:
    description: Writer minimum timeout (in milliseconds) to wait for new items to come into the DurableLog (in case we reached the tail).
  max_read_timeout_millis:
    description: Writer maximum timeout (in milliseconds) to wait for new items to come into the DurableLog (in case we reached the tail).
  error_sleep_millis:
    description: Writer amount of time to sleep (in milliseconds) if an exception was encountered during the execution of a Writer's iteration.
  flush_timeout_millis:
    description: Writer timeout (in milliseconds) for flushing data to Tier2 Storage.
  ack_timeout_millis:
    description: Writer timeout (in milliseconds) for acknowledging data writes (and subsequently truncating Tier1 DurableDataLog).
  shutdown_timeout_millis:
    description: Writer timeout (in milliseconds) for waiting for a proper shutdown.
