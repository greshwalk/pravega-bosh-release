---
name: bookkeeper

packages:
- jdk8
- bookkeeper

templates:
  ctl.erb: bin/ctl
  pre-start.erb: bin/pre-start
  log4j.properties: config/log4j.properties
  bk_server.conf.erb: config/bk_server.conf

consumes:
- name: zookeepers
  type: zookeeper_peers

properties:
  bookie_port:
    description: "The port to listen for client connections"
    default: 3181
  journal_directory:
    description: Directory to which Bookkeeper outputs its write ahead log, ideally on a dedicated device
    default: /var/vcap/store/bookkeeper/bk-txn
  ledger_directories:
    description: Directory to which Bookkeeper outputs ledger snapshots. Multiple directories can be defined, separated by comma
    default: /var/vcap/store/bookkeeper/bk1-data
  index_directories:
    description: Directories to store index files. If not specified, bookie will use ledgerDirectories to store index files
  bookie_death_watch_interval:
    description: Interval to check whether a bookie is dead or not, in milliseconds
  gc_wait_time:
    description: Interval to trigger next garbage collection, in milliseconds
  flush_interval:
    description: journal dir and ledger dirs each on different devices. However, if it necessary to have journal dir and ledger dirs on the same device, one option is to increment the flush interval to get higher performance. Upon a failure, the bookie will take longer to recover
  num_add_worker_threads:
    description: Number of threads that should handle write requests. if zero, the writes would be handled by netty threads directly
  num_read_worker_threads:
    description: Number of threads that should handle read requests. if zero, the reads would be handled by netty threads directly
  nio.server_tcp_delay:
    description: This settings is used to enabled/disabled Nagle's algorithm, which is a means of improving the efficiency of TCP/IP networks by reducing the number of packets that need to be sent over the network. If you are sending many small messages, such that more than one can fit in a single IP packet, setting server.tcpnodelay to false to enable Nagle algorithm can provide better performance. Default value is true
  journal_max_size_mb:
    description: Maximum file size of journal file, in megabytes. A new journal file will be created when the old one reaches the file size limitation. The default value is 2kB.
  journal_max_backups:
    description: Max number of old journal file to keep. Keeping a number of old journal files might help data recovery in some special cases. The default value is 5.
  journal_pre_alloc_size_mb:
    description: The space that bookie pre-allocate at a time in the journal
  journal_write_buffer_size_kb:
    description: Size of the write buffers used for the journal.
  journal_remove_from_page_cache:
    description: Whether bookie removes pages from page cache after force write. Used to avoid journal pollute os page cache.
  journal_adaptive_group_writes:
    description: Whether to group journal force writes, which optimize group commit for higher throughput.
  journal_max_group_wait_msec:
    description: Maximum latency to impose on a journal write to achieve grouping.
  journal_buffered_writes_threshold:
    description: Maximum writes to buffer to achieve grouping.
  journal_flush_when_queue_empty:
    description: Whether to flush the journal when journal queue is empty. Disabling it would provide sustained journal adds throughput.
  num_journal_callback_threads:
    description: The number of threads that should handle journal callbacks.
  open_file_limit:
    description: Maximum number of ledger index files that can be opened in a bookie. If the number of ledger index files reaches this limit, the bookie starts to flush some ledger indexes from memory to disk. If flushing happens too frequently, then performance is affected. You can tune this number to improve performance according.
  page_size:
    description: Size of an index page in ledger cache, in bytes. A larger index page can improve performance when writing page to disk, which is efficient when you have small number of ledgers and these ledgers have a similar number of entries. With a large number of ledgers and a few entries per ledger, a smaller index page would improves memory usage.
  page_limit:
    description: Maximum number of index pages to store in the ledger cache. If the number of index pages reaches this limit, bookie server starts to flush ledger indexes from memory to disk. Incrementing this value is an option when flushing becomes frequent. It is important to make sure, though, that pageLimit*pageSize is not more than JVM max memory limit; otherwise it will raise an OutOfMemoryException. In general, incrementing pageLimit, using smaller index page would gain better performance in the case of a large number of ledgers with few entries per ledger. If pageLimit is -1, a bookie uses 1/3 of the JVM memory to compute the maximum number of index pages.
  ledger_manager_type:
    description: What kind of ledger manager is used to manage how ledgers are stored, managed and garbage collected. See BookKeeper Internals for detailed info. Default is flat.
  zk_ledgers_root_path:
    description: Root zookeeper path to store ledger metadata. Default is /ledgers.
  log_size_limit:
    description: Maximum file size of entry logger, in bytes. A new entry log file will be created when the old one reaches the file size limitation. The default value is 2GB.
  entry_log_file_preallocation_enabled:
    description: Enable/Disable entry logger preallocation. Enable this would provide sustained higher throughput and reduce latency impaction.
  read_buffer_size_bytes:
    description: The number of bytes used as capacity for BufferedReadChannel. Default is 512 bytes.
  write_buffer_size_bytes:
    description: The number of bytes used as capacity for the write buffer. Default is 64KB.
  minor_compaction_interval:
    description: Interval to run minor compaction, in seconds. If it is set to less than or equal to zero, then minor compaction is disabled. Default is 1 hour.
  minor_compaction_threshold:
    description: Entry log files with remaining size under this threshold value will be compacted in a minor compaction. If it is set to less than or equal to zero, the minor compaction is disabled. Default is 0.2
  major_compaction_interval:
    description: Interval to run major compaction, in seconds. If it is set to less than or equal to zero, then major compaction is disabled. Default is 1 day.
  major_compaction_threshold:
    description: Entry log files with remaining size below this threshold value will be compacted in a major compaction. Those entry log files whose remaining size percentage is still higher than the threshold value will never be compacted. If it is set to less than or equal to zero, the major compaction is disabled. Default is 0.8.
  compaction_max_outstanding_requests:
    description: The maximum number of entries which can be compacted without flushing. When compacting, the entries are written to the entrylog and the new offsets are cached in memory. Once the entrylog is flushed the index is updated with the new offsets. This parameter controls the number of entries added to the entrylog before a flush is forced. A higher value for this parameter means more memory will be used for offsets. Each offset consist of 3
  compaction_rate:
    description: The rate at which compaction will re-add entries. The unit is adds per second.
  enable_statistics:
    description: Enables the collection of statistics. Default is on.
  open_ledger_rereplication_grace_period:
    description: This is the grace period which the rereplication worker waits before fencing and replicating a ledger fragment which is still being written to upon a bookie failure. The default is 30s.
  read_only_mode_enabled:
    description: Enables/disables the read-only Bookie feature. A bookie goes into read-only mode when it finds integrity issues with stored data. If readOnlyModeEnabled is false, the bookie shuts down if it finds integrity issues. By default it is enabled.
  disk_usage_threshold:
    description: Fraction of the total utilized usable disk space to declare the disk full. The total available disk space is obtained with File.getUsableSpace(). Default is 0.95.
  disk_check_interval:
    description: Interval between consecutive checks of disk utilization. Default is 10s.
  zk_timeout:
    descripition: ZooKeeper client session timeout in milliseconds. Bookie server will exit if it received SESSION_EXPIRED because it was partitioned off from ZooKeeper for more than the session timeout. JVM garbage collection or disk I/O can cause SESSION_EXPIRED. Increment this value could help avoiding this issue. The default value is 10,000.
    default: 10000
